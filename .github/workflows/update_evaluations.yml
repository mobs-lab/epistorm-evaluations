name: update_evaluations

on:   
# run this workflow manually from the Actions tab
  workflow_dispatch:
      
# run on schedule with data release
  schedule:
    - cron: '0 6-21/3 * * 4'  # runs every Thursday, starting from 6:00 AM UTC until 9:00 PM UTC, every 3 hours
    - cron: '0 21 * * 3,5,6'   # separately runs on every Wednesday, Friday, and Saturday at 9:00 PM UTC
  
jobs:
  update-evaluations:
    runs-on: ubuntu-latest
    steps:
      - name: checkout repository
        uses: actions/checkout@v4
        with:
          submodules: 'recursive'
          fetch-depth: 0
          ref: main  # Explicitly checkout main

      - name: update submodule
        run: |
          git config user.name github-actions
          git config user.email github-actions@github.com
          git pull origin main
          git submodule init
          git submodule update --remote
          git submodule foreach git pull origin main
          
      - name: check and copy new files
        id: check-copy
        run: |
          source ./data_retrieval.sh
          git config user.name github-actions
          git config user.email github-actions@github.com
          git add *
          git commit -m 'track data updates via github actions' --allow-empty
          git push
          
#      - name: push copied files
#        if: ${{ env.NEW_PREDICTION_DATA_COPIED == 'true' || env.NEW_SURVEILLANCE_DATA_COPIED == 'true' }}
#        run: |
#          git config user.name github-actions
#          git config user.email github-actions@github.com
#          git add *
#          git commit -m 'track data updates via github actions'
#          git push
          
      - name: python setup
        if: ${{ env.NEW_PREDICTION_DATA_COPIED == 'true' || env.NEW_SURVEILLANCE_DATA_COPIED == 'true' }}
        uses: actions/setup-python@v4
        with:
          python-version: 3.11
         
      - name: install dependencies
        if: ${{ env.NEW_PREDICTION_DATA_COPIED == 'true' || env.NEW_SURVEILLANCE_DATA_COPIED == 'true' }}
        run: |
          python -m pip install --upgrade pip
          pip install -r pip_requirements.txt

      - name: run evaluations
        if: ${{ env.NEW_PREDICTION_DATA_COPIED == 'true' || env.NEW_SURVEILLANCE_DATA_COPIED == 'true' }}
        run: |
          python epistorm_evaluations.py --mode update
          git config user.name github-actions
          git config user.email github-actions@github.com
          git add *
          git commit -m 'generate evaluations via github actions'
          git push
