name: update_evaluations

on:   
# run this workflow manually from the Actions tab
  workflow_dispatch:
      
# run on schedule with data release
  schedule:
    - cron: '30 6-21/3 * * 4'  # runs every Thursday, starting from 6:30 AM UTC until 9:30 PM UTC, every 3 hours
    - cron: '30 21 * * 5,6'   # separately runs another two times, on every Friday and Saturday at 9:30 PM UTC
  
jobs:

  update-data:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: 'recursive'
          fetch-depth: 0
          ref: main  # Explicitly checkout main

      - name: Update Submodule
        run: |
          git config user.name github-actions
          git config user.email github-actions@github.com
          git pull origin main
          git submodule init
          git submodule update --remote
          git submodule foreach git pull origin main
          
      - name: Check and Copy New Files
        id: check-copy
        run: |
          source ./data_retrieval.sh
          git config user.name github-actions
          git config user.email github-actions@github.com
          git add *
          git commit -m 'track data updates via github actions'
          git push
          
  evaluate-predictions:
    needs: update-data
    runs-on: ubuntu-latest
    steps:
      - name: checkout repository
        if: ${{ env.NEW_PREDICTION_DATA_COPIED == 'true' || env.NEW_SURVEILLANCE_DATA_COPIED == 'true' }}
        uses: actions/checkout@v4
          
      - name: python setup
        if: ${{ env.NEW_PREDICTION_DATA_COPIED == 'true' || env.NEW_SURVEILLANCE_DATA_COPIED == 'true' }}
        uses: actions/setup-python@v4
        with:
          python-version: 3.11
         
      - name: install dependencies
        if: ${{ env.NEW_PREDICTION_DATA_COPIED == 'true' || env.NEW_SURVEILLANCE_DATA_COPIED == 'true' }}
        run: |
          python -m pip install --upgrade pip
          pip install -r pip_requirements.txt

      - name: run evaluations
        if: ${{ env.NEW_PREDICTION_DATA_COPIED == 'true' || env.NEW_SURVEILLANCE_DATA_COPIED == 'true' }}
        run: |
          python epistorm_evaluations.py --mode update
          git config user.name github-actions
          git config user.email github-actions@github.com
          git add *
          git commit -m 'generate evaluations via github actions'
          git push
